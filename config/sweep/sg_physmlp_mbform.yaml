entity: sh-divya
project: sg_encoder
program: run.py
method: bayes
metric:
  goal: minimize
  name: total_val_mae

parameters:
  model.hidden_channels:
    values: [64, 128, 196, 256, 320, 384]
  model.num_layers:
    values: [2, 3, 4, 5]
  model.lat_hidden_channels:
    values: [32, 64, 128, 196]
  model.lat_num_layers:
    values: [1, 2, 3]
  model.comp_num_layers:
    values: [1, 2, 3]
  model.comp_hidden_channels:
    values: [32, 64, 128, 196]
  model.comp_phys_embeds.z_emb_size:
    values: [16, 32, 64, 128]
  model.comp_phys_embeds.period_emb_size:
    values: [8, 16, 32, 64]
  model.comp_phys_embeds.group_emb_size:
    values: [8, 16, 32, 64]
  model.comp_phys_embeds.properties_proj_size:
    values: [16, 32, 64, 128]
  model.sg_encoder.symmetries_hiddens:
    values: [0, [16], [64], [128], [16, 16], [64, 16], [128, 16], [64, 64], [128, 128]]
  model.sg_encoder.space_group_size:
    values: [0, 16, 32, 64, 128]
  model.sg_encoder.point_symmetry_size:
    values: [0, 16, 32, 64, 128]
  model.sg_encoder.cl_system_size:
    values: [0, 16, 32, 64, 128]
  optim.batch_size:
    values: [32, 64, 128, 196]
  optim.es_patience:
    values: [5,7,11]
  optim.lr:
    distribution: log_uniform_values
    min: 0.0002
    max: 0.002
  optim.epochs:
    values: [20, 25, 30, 40]
  optim.scheduler.name:
    values: ["StepLR", "ReduceLROnPlateau", ""]

command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--config"
  - "physmlp-mbform"
  - "--wandb_entity=sh-divya"
  - "--wandb_project=sg_encoder"
  - "--wandb_tags=using quaternion encoder for sg"
  - ${args}
